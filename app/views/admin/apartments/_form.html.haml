= semantic_form_for [:admin, @apartment], remote: true do |f|
  = f.semantic_errors *f.object.errors.keys
  = f.inputs class: 'col-md-4' do
    = f.input :title
    .checkbox
      = f.label :active
      = f.check_box :active
    = f.input :price
  = f.inputs class: 'col-md-12' do
    = f.input :short_description
    = f.input :description, input_html: { class: 'tinymce' }

  - unless @apartment.new_record?
    = render 'fields_for_photos', photos: @apartment.photos.where.not(id: nil), form: f

  = f.actions class: 'col-md-12' do
    = f.button t('actions.photos.add'), id: 'add-photos', class: 'btn btn-big btn-primary'
    = f.action :submit, as: :button, label: t("actions.apartment.#{action_name}"),
      button_html: { class: 'btn btn-big btn-success pull-right' }

- unless @apartment.new_record?
  .hide
    = semantic_form_for [:admin, @apartment, @apartment.photos.build], html: { multipart: true }, remote: true do |f|
      = f.inputs class: 'col-md-4' do
        = f.file_field :image, multiple: true, name: 'photo[image]'
